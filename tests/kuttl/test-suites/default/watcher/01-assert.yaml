apiVersion: watcher.openstack.org/v1beta1
kind: Watcher
metadata:
  finalizers:
  - openstack.org/watcher
  name: watcher-kuttl
  namespace: watcher-kuttl-default
spec:
  apiContainerImageURL: "quay.io/podified-antelope-centos9/openstack-watcher-api:current-podified"
  decisionengineContainerImageURL: "quay.io/podified-antelope-centos9/openstack-watcher-decision-engine:current-podified"
  applierContainerImageURL: "quay.io/podified-antelope-centos9/openstack-watcher-applier:current-podified"
status:
  conditions:
  - message: Setup complete
    reason: Ready
    status: "True"
    type: Ready
  - message: DB create completed
    reason: Ready
    status: "True"
    type: DBReady
  - message: Input data complete
    reason: Ready
    status: "True"
    type: InputReady
  - message: Setup complete
    reason: Ready
    status: "True"
    type: KeystoneServiceReady
  - message: MariaDBAccount creation complete
    reason: Ready
    status: "True"
    type: MariaDBAccountReady
  - message: WatcherRabbitMQTransportURL successfully created
    reason: Ready
    status: "True"
    type: WatcherRabbitMQTransportURLReady
---
apiVersion: v1
kind: Secret
metadata:
  name: watcher-db-secret
  namespace: watcher-kuttl-default
  finalizers:
  - openstack.org/watcher
---
apiVersion: mariadb.openstack.org/v1beta1
kind: MariaDBAccount
metadata:
  name: watcher
  namespace: watcher-kuttl-default
  finalizers:
  - openstack.org/watcher
  - openstack.org/mariadbaccount
  labels:
    mariaDBDatabaseName: watcher
---
apiVersion: mariadb.openstack.org/v1beta1
kind: MariaDBDatabase
metadata:
  name: watcher
  namespace: watcher-kuttl-default
  finalizers:
  - openstack.org/watcher
  - openstack.org/mariadbdatabase
  - openstack.org/mariadbaccount-watcher
---
apiVersion: rabbitmq.openstack.org/v1beta1
kind: TransportURL
metadata:
  generation: 1
  labels:
    service: watcher
  name: watcher-kuttl-watcher-transport
  namespace: watcher-kuttl-default
spec:
  rabbitmqClusterName: rabbitmq
status:
  conditions:
  - message: Setup complete
    reason: Ready
    status: "True"
    type: Ready
  - message: TransportURL completed
    reason: Ready
    status: "True"
    type: TransportURLReady
  secretName: rabbitmq-transport-url-watcher-kuttl-watcher-transport
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-transport-url-watcher-kuttl-watcher-transport
  namespace: watcher-kuttl-default
---
apiVersion: keystone.openstack.org/v1beta1
kind: KeystoneService
metadata:
  name: watcher
  finalizers:
  - openstack.org/watcher
  - openstack.org/keystoneservice
spec:
  enabled: true
  passwordSelector: WatcherPassword
  secret: osp-secret
  serviceDescription: Watcher Service
  serviceName: watcher
  serviceType: infra-optim
  serviceUser: watcher
---
apiVersion: kuttl.dev/v1beta1
kind: TestAssert
namespaced: true
commands:
  - script: |
      set -euxo pipefail
      oc exec -n watcher-kuttl-default openstackclient -- openstack service list -f value -c Name -c Type |[ $(grep -c ^watcher) == 1 ]
      SERVICEID=$(oc exec -n watcher-kuttl-default openstackclient -- openstack service list -f value -c Name -c Type -c ID | grep watcher| awk '{print $1}')
      [ $(oc get -n watcher-kuttl-default keystoneservice watcher -o jsonpath={.status.serviceID}) == $SERVICEID ]
---
# Check for Container Image environment variables
apiVersion: kuttl.dev/v1beta1
kind: TestAssert
commands:
  - script: |
      set -euxo pipefail
      env_variables=$(oc set env $(oc get pods -n openstack-operators -o name -l openstack.org/operator-name=watcher) -n openstack-operators --list)
      counter=0
      for i in ${env_variables}; do
          if echo ${i} | grep '_URL_DEFAULT' &> /dev/null; then
              echo ${i}
              counter=$((counter + 1))
          fi
      done
      if [ ${counter} -lt 3 ]; then
        echo "Error: Less than 3 _URL_DEFAULT variables found."
        exit 1
      else
        echo "Success: ${counter} _URL_DEFAULT variables found."
      fi
