---
- project:
    name: openstack-k8s-operators/watcher-operator
    default-branch: main
    github-check:
      jobs:
        - noop
        - watcher-operator-doc-preview
        - openstack-meta-content-provider:
            vars:
              cifmw_operator_build_meta_build: false
        - watcher-operator-validation
        - watcher-operator-kuttl

- job:
    name: watcher-operator-base
    parent: podified-multinode-edpm-deployment-crc-2comp
    dependencies: ["openstack-meta-content-provider"]
    description: |
      A multinode EDPM Zuul job which has one ansible controller, one
      extracted crc and two computes. It will be used for testing watcher-operator.
    vars:
      watcher_repo: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/watcher-operator"
      watcher_hook: "{{ watcher_repo }}/ci/playbooks/deploy_watcher_service.yaml"
      watcher_coo_hook: "{{ watcher_repo }}/ci/playbooks/deploy_cluster_observability_operator.yaml"
      # controlplane customization to deploy telemetry service
      cifmw_edpm_prepare_timeout: 60
      cifmw_edpm_prepare_kustomizations:
        - apiVersion: kustomize.config.k8s.io/v1beta1
          kind: Kustomization
          namespace: openstack
          patches:
          - patch: |-
              apiVersion: core.openstack.org/v1beta1
              kind: OpenStackControlPlane
              metadata:
                name: unused
              spec:
                telemetry:
                  enabled: true
                  template:
                    metricStorage:
                      enabled: true
                      monitoringStack:
                        alertingEnabled: false
            target:
              kind: OpenStackControlPlane
      cifmw_install_yamls_whitelisted_vars: &install_yamls_whitelist
        - 'WATCHER_REPO'
        - 'WATCHER_BRANCH'
        - 'OUTPUT_DIR'
      pre_deploy_create_coo_subscription:
        - name: Deploy cluster-observability-operator
          type: playbook
          source: "{{ watcher_coo_hook }}"
      post_deploy:
        - name: Deploy watcher service
          type: playbook
          source: "{{ watcher_hook }}"
          extra_vars:
            watcher_catalog_image: "{{ content_provider_registry_ip }}:5001/openstack-k8s-operators/watcher-operator-index:{{ zuul.patchset }}"

- job:
    name: watcher-operator-validation
    parent: watcher-operator-base
    description: |
      A zuul job to validate the watcher operator and its service deployment.
    vars:
      run_tempest: false

- job:
    name: watcher-operator-kuttl
    parent: cifmw-multinode-kuttl-operator-target
    description: |
      A zuul job to run watcher operator kuttl tests.
    vars:
      operator_name: watcher-operator
      cifmw_install_yamls_whitelisted_vars: *install_yamls_whitelist
      watcher_repo: "{{ ansible_user_dir }}/src/github.com/openstack-k8s-operators/watcher-operator"
      watcher_hook: "{{ watcher_repo }}/ci/playbooks/deploy_watcher_service.yaml"
      deploy_watcher_service: false
      # run the hook to install watcher at the end of the cifmw infra playbook. If we try to run it
      # as a standalone plabyook, it tries to load the cifmw ci_script action
      # plugin from the zuul executor and doesn't find it
      post_infra:
        - name: Deploy watcher service
          type: playbook
          source: "{{ watcher_hook }}"
          extra_vars:
            watcher_catalog_image: "{{ content_provider_registry_ip }}:5001/openstack-k8s-operators/watcher-operator-index:{{ zuul.patchset }}"

- job:
    name: watcher-operator-doc-preview
    parent: cifmw-doc
    files:
      - docs
      - Gemfile
    vars:
      asciidoc_available: true
      doc_available: false
